package io.github.matgalv2.wagewise.ml

object Processing {

  val columns = Seq(
    "date_of_employment",
    "age",
    "sex",
    "country",
    "experience_years_it",
    "languages",
    "speciality",
    "core_programming_language",
    "academic_title",
    "education_towards_it",
    "rate_per_hour",
    "company_country",
    "company_type",
    "work_form",
    "team_size",
    "team_type",
    "form_of_employment",
    "full_time",
    "paid_days_off",
    "insurance",
    "training_sessions"
  )
  val exampleEmployments = Seq(
    (
      "2018-01-01",
      22,
      "M",
      "Poland",
      3,
      "Greek",
      "Systems analyst",
      "Swift",
      "Licence",
      "true",
      20.3,
      "Poland",
      "Software house",
      "remote",
      9,
      "international",
      "contractor",
      true,
      true,
      false,
      false
    ),
    (
      "2018-01-01",
      22,
      "F",
      "Spain",
      3,
      "Greek",
      "Backend",
      "Python",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Public institution",
      "stationary",
      9,
      "local",
      "employee",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "F",
      "Germany",
      3,
      "Greek",
      "Software Engineer",
      "Java",
      "Master",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "hybrid",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Sweden",
      3,
      "Greek",
      "Tech lead",
      "JavaScript",
      "Bachelor",
      "false",
      20.3,
      "Poland",
      "Company",
      "stationary",
      9,
      "international",
      "employee",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Greece",
      3,
      "Greek",
      "DB Administrator",
      "Python",
      "Doctorate",
      "false",
      20.3,
      "Poland",
      "Big tech",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "United Kingdom",
      3,
      "Greek",
      "Data quality manager",
      "R",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Startup",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "France",
      3,
      "Greek",
      "IT Security specialist",
      "Objective-C",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Other",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Russia",
      3,
      "Greek",
      "Computer scientist",
      "Kotlin",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Italy",
      3,
      "Greek",
      "Web administrator",
      "PHP",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Greece",
      3,
      "Greek",
      "Other",
      "Cobol",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Greece",
      3,
      "Greek",
      "Applications engineer",
      "Go",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Greece",
      3,
      "Greek",
      "Data scientist",
      "Other",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Greece",
      3,
      "Greek",
      "Cloud system engineer",
      "Ruby",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    ),
    (
      "2018-01-01",
      22,
      "M",
      "Greece",
      3,
      "Greek",
      "Frontend",
      "Python",
      "No degree",
      "false",
      20.3,
      "Poland",
      "Corporation",
      "stationary",
      9,
      "international",
      "contractor",
      false,
      false,
      true,
      true
    )
  )

  val exampleRow =
    Seq(
      (
        "2018-01-01",
        22,
        "M",
        "England",
        3,
        "Greek",
        "Frontend",
        "Python",
        "No degree",
        "true",
        20.3,
        "Germany",
        "Corporation",
        "stationary",
        9,
        "international",
        "contractor",
        false,
        false,
        true,
        true
      )
    )

  val categoricalCols = Array(
    "sex",
    "country",
    "speciality",
    "core_programming_language",
    "academic_title",
    "education_towards_it",
    "company_type",
    "work_form",
    "team_type",
    "form_of_employment"
  )
  type ProgrammerFeatures = (
    String,
    Int,
    String,
    String,
    Int,
    String,
    String,
    String,
    String,
    String,
    Double,
    String,
    String,
    String,
    Int,
    String,
    String,
    Boolean,
    Boolean,
    Boolean,
    Boolean
  )
}
